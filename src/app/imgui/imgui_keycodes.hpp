#pragma once

#include <imgui/imgui.h>
#include "keycodes.hpp"

namespace TE::App
{
    inline ImGuiKey GetImGuiKeyCode(TE::Core::KEY key)
    {
        switch( key )
        {
            case TE::Core::KEY_TAB:
                return ImGuiKey_Tab;
            case TE::Core::KEY_LEFT:
                return ImGuiKey_LeftArrow;
            case TE::Core::KEY_RIGHT:
                return ImGuiKey_RightArrow;
            case TE::Core::KEY_UP:
                return ImGuiKey_UpArrow;
            case TE::Core::KEY_DOWN:
                return ImGuiKey_DownArrow;
            case TE::Core::KEY_PAGE_UP:
                return ImGuiKey_PageUp;
            case TE::Core::KEY_PAGE_DOWN:
                return ImGuiKey_PageDown;
            case TE::Core::KEY_HOME:
                return ImGuiKey_Home;
            case TE::Core::KEY_END:
                return ImGuiKey_End;
            case TE::Core::KEY_INSERT:
                return ImGuiKey_Insert;
            case TE::Core::KEY_DELETE:
                return ImGuiKey_Delete;
            case TE::Core::KEY_BACKSPACE:
                return ImGuiKey_Backspace;
            case TE::Core::KEY_SPACE:
                return ImGuiKey_Space;
            case TE::Core::KEY_ENTER:
                return ImGuiKey_Enter;
            case TE::Core::KEY_ESCAPE:
                return ImGuiKey_Escape;
            case TE::Core::KEY_APOSTROPHE:
                return ImGuiKey_Apostrophe;
            case TE::Core::KEY_COMMA:
                return ImGuiKey_Comma;
            case TE::Core::KEY_MINUS:
                return ImGuiKey_Minus;
            case TE::Core::KEY_PERIOD:
                return ImGuiKey_Period;
            case TE::Core::KEY_SLASH:
                return ImGuiKey_Slash;
            case TE::Core::KEY_SEMICOLON:
                return ImGuiKey_Semicolon;
            case TE::Core::KEY_EQUAL:
                return ImGuiKey_Equal;
            case TE::Core::KEY_LEFT_BRACKET:
                return ImGuiKey_LeftBracket;
            case TE::Core::KEY_BACKSLASH:
                return ImGuiKey_Backslash;
            case TE::Core::KEY_RIGHT_BRACKET:
                return ImGuiKey_RightBracket;
            case TE::Core::KEY_GRAVE_ACCENT:
                return ImGuiKey_GraveAccent;
            case TE::Core::KEY_CAPS_LOCK:
                return ImGuiKey_CapsLock;
            case TE::Core::KEY_SCROLL_LOCK:
                return ImGuiKey_ScrollLock;
            case TE::Core::KEY_NUM_LOCK:
                return ImGuiKey_NumLock;
            case TE::Core::KEY_PRINT_SCREEN:
                return ImGuiKey_PrintScreen;
            case TE::Core::KEY_PAUSE:
                return ImGuiKey_Pause;
            case TE::Core::KEY_KP_0:
                return ImGuiKey_Keypad0;
            case TE::Core::KEY_KP_1:
                return ImGuiKey_Keypad1;
            case TE::Core::KEY_KP_2:
                return ImGuiKey_Keypad2;
            case TE::Core::KEY_KP_3:
                return ImGuiKey_Keypad3;
            case TE::Core::KEY_KP_4:
                return ImGuiKey_Keypad4;
            case TE::Core::KEY_KP_5:
                return ImGuiKey_Keypad5;
            case TE::Core::KEY_KP_6:
                return ImGuiKey_Keypad6;
            case TE::Core::KEY_KP_7:
                return ImGuiKey_Keypad7;
            case TE::Core::KEY_KP_8:
                return ImGuiKey_Keypad8;
            case TE::Core::KEY_KP_9:
                return ImGuiKey_Keypad9;
            case TE::Core::KEY_KP_DECIMAL:
                return ImGuiKey_KeypadDecimal;
            case TE::Core::KEY_KP_DIVIDE:
                return ImGuiKey_KeypadDivide;
            case TE::Core::KEY_KP_MULTIPLY:
                return ImGuiKey_KeypadMultiply;
            case TE::Core::KEY_KP_SUBTRACT:
                return ImGuiKey_KeypadSubtract;
            case TE::Core::KEY_KP_ADD:
                return ImGuiKey_KeypadAdd;
            case TE::Core::KEY_KP_ENTER:
                return ImGuiKey_KeypadEnter;
            case TE::Core::KEY_KP_EQUAL:
                return ImGuiKey_KeypadEqual;
            case TE::Core::KEY_LEFT_SHIFT:
                return ImGuiKey_LeftShift;
            case TE::Core::KEY_LEFT_CONTROL:
                return ImGuiKey_LeftCtrl;
            case TE::Core::KEY_LEFT_ALT:
                return ImGuiKey_LeftAlt;
            case TE::Core::KEY_LEFT_SUPER:
                return ImGuiKey_LeftSuper;
            case TE::Core::KEY_RIGHT_SHIFT:
                return ImGuiKey_RightShift;
            case TE::Core::KEY_RIGHT_CONTROL:
                return ImGuiKey_RightCtrl;
            case TE::Core::KEY_RIGHT_ALT:
                return ImGuiKey_RightAlt;
            case TE::Core::KEY_RIGHT_SUPER:
                return ImGuiKey_RightSuper;
            case TE::Core::KEY_MENU:
                return ImGuiKey_Menu;
            case TE::Core::KEY_NUM_0:
                return ImGuiKey_0;
            case TE::Core::KEY_NUM_1:
                return ImGuiKey_1;
            case TE::Core::KEY_NUM_2:
                return ImGuiKey_2;
            case TE::Core::KEY_NUM_3:
                return ImGuiKey_3;
            case TE::Core::KEY_NUM_4:
                return ImGuiKey_4;
            case TE::Core::KEY_NUM_5:
                return ImGuiKey_5;
            case TE::Core::KEY_NUM_6:
                return ImGuiKey_6;
            case TE::Core::KEY_NUM_7:
                return ImGuiKey_7;
            case TE::Core::KEY_NUM_8:
                return ImGuiKey_8;
            case TE::Core::KEY_NUM_9:
                return ImGuiKey_9;
            case TE::Core::KEY_A:
                return ImGuiKey_A;
            case TE::Core::KEY_B:
                return ImGuiKey_B;
            case TE::Core::KEY_C:
                return ImGuiKey_C;
            case TE::Core::KEY_D:
                return ImGuiKey_D;
            case TE::Core::KEY_E:
                return ImGuiKey_E;
            case TE::Core::KEY_F:
                return ImGuiKey_F;
            case TE::Core::KEY_G:
                return ImGuiKey_G;
            case TE::Core::KEY_H:
                return ImGuiKey_H;
            case TE::Core::KEY_I:
                return ImGuiKey_I;
            case TE::Core::KEY_J:
                return ImGuiKey_J;
            case TE::Core::KEY_K:
                return ImGuiKey_K;
            case TE::Core::KEY_L:
                return ImGuiKey_L;
            case TE::Core::KEY_M:
                return ImGuiKey_M;
            case TE::Core::KEY_N:
                return ImGuiKey_N;
            case TE::Core::KEY_O:
                return ImGuiKey_O;
            case TE::Core::KEY_P:
                return ImGuiKey_P;
            case TE::Core::KEY_Q:
                return ImGuiKey_Q;
            case TE::Core::KEY_R:
                return ImGuiKey_R;
            case TE::Core::KEY_S:
                return ImGuiKey_S;
            case TE::Core::KEY_T:
                return ImGuiKey_T;
            case TE::Core::KEY_U:
                return ImGuiKey_U;
            case TE::Core::KEY_V:
                return ImGuiKey_V;
            case TE::Core::KEY_W:
                return ImGuiKey_W;
            case TE::Core::KEY_X:
                return ImGuiKey_X;
            case TE::Core::KEY_Y:
                return ImGuiKey_Y;
            case TE::Core::KEY_Z:
                return ImGuiKey_Z;
            case TE::Core::KEY_F1:
                return ImGuiKey_F1;
            case TE::Core::KEY_F2:
                return ImGuiKey_F2;
            case TE::Core::KEY_F3:
                return ImGuiKey_F3;
            case TE::Core::KEY_F4:
                return ImGuiKey_F4;
            case TE::Core::KEY_F5:
                return ImGuiKey_F5;
            case TE::Core::KEY_F6:
                return ImGuiKey_F6;
            case TE::Core::KEY_F7:
                return ImGuiKey_F7;
            case TE::Core::KEY_F8:
                return ImGuiKey_F8;
            case TE::Core::KEY_F9:
                return ImGuiKey_F9;
            case TE::Core::KEY_F10:
                return ImGuiKey_F10;
            case TE::Core::KEY_F11:
                return ImGuiKey_F11;
            case TE::Core::KEY_F12:
                return ImGuiKey_F12;
            case TE::Core::KEY_F13:
                return ImGuiKey_F13;
            case TE::Core::KEY_F14:
                return ImGuiKey_F14;
            case TE::Core::KEY_F15:
                return ImGuiKey_F15;
            case TE::Core::KEY_F16:
                return ImGuiKey_F16;
            case TE::Core::KEY_F17:
                return ImGuiKey_F17;
            case TE::Core::KEY_F18:
                return ImGuiKey_F18;
            case TE::Core::KEY_F19:
                return ImGuiKey_F19;
            case TE::Core::KEY_F20:
                return ImGuiKey_F20;
            case TE::Core::KEY_F21:
                return ImGuiKey_F21;
            case TE::Core::KEY_F22:
                return ImGuiKey_F22;
            case TE::Core::KEY_F23:
                return ImGuiKey_F23;
            case TE::Core::KEY_F24:
                return ImGuiKey_F24;
            default:
                return ImGuiKey_None;
        }
    }
}